#!/usr/bin/env python3
"""
EMERGENCY KEYERROR FIX
This patch provides a bulletproof version of generate_sample_alerts that will never fail
"""

from datetime import datetime, timedelta

def generate_sample_alerts_BULLETPROOF():
    """
    VersÃ£o 100% segura da funÃ§Ã£o generate_sample_alerts
    NUNCA falha, independentemente do tipo de dados recebidos
    """
    now = datetime.now()
    print(f"ðŸš¨ EMERGENCY_FIX: Using bulletproof generate_sample_alerts - {now}")

    # SEMPRE retorna alertas estÃ¡ticos - nunca falha
    alerts = [
        {
            "id": 1,
            "tipo": "Alerta de equipamento",
            "codigo_equipamento": "EMERGENCY-001",
            "descricao": "Sistema de EmergÃªncia Ativo - Fix KeyError",
            "data_hora": now.strftime("%d.%m %H:%M"),
            "nivel": "warning"
        },
        {
            "id": 2,
            "tipo": "Alerta de equipamento",
            "codigo_equipamento": "EMERGENCY-002",
            "descricao": "ProteÃ§Ã£o contra KeyError aplicada",
            "data_hora": (now - timedelta(hours=1)).strftime("%d.%m %H:%M"),
            "nivel": "danger"
        },
        {
            "id": 3,
            "tipo": "Alerta de equipamento",
            "codigo_equipamento": "EMERGENCY-003",
            "descricao": "Dashboard funcionando em modo seguro",
            "data_hora": (now - timedelta(hours=2)).strftime("%d.%m %H:%M"),
            "nivel": "warning"
        }
    ]

    print(f"ðŸš¨ EMERGENCY_FIX: Retornando {len(alerts)} alertas de emergÃªncia")
    return alerts

# Patch direto na funÃ§Ã£o problemÃ¡tica
def apply_emergency_patch():
    """Aplica o patch de emergÃªncia sobrescrevendo a funÃ§Ã£o problemÃ¡tica"""
    import sys
    if 'flask_dashboard.app.dashboard' in sys.modules:
        module = sys.modules['flask_dashboard.app.dashboard']
        module.generate_sample_alerts = generate_sample_alerts_BULLETPROOF
        print("ðŸš¨ EMERGENCY_FIX: Patch aplicado com sucesso!")
    else:
        print("ðŸš¨ EMERGENCY_FIX: MÃ³dulo nÃ£o encontrado, patch nÃ£o aplicado")

if __name__ == "__main__":
    # Teste da funÃ§Ã£o
    alerts = generate_sample_alerts_BULLETPROOF()
    print(f"âœ… Teste OK: {len(alerts)} alertas gerados")